/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.0.0-beta2).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.openapitools.model.InvalidTransaction;
import org.openapitools.model.SuccessfulTransactionResp;
import org.openapitools.model.TransactionReq;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2020-12-02T07:25:48.417-08:00[America/Los_Angeles]")
@Validated
@Api(value = "transaction", description = "the transaction API")
public interface TransactionApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /transaction
     *
     * @param transactionReq  (required)
     * @return success (status code 200)
     *         or InvalidTransaction (status code 400)
     */
    @ApiOperation(value = "", nickname = "transactionPost", notes = "", response = SuccessfulTransactionResp.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "success", response = SuccessfulTransactionResp.class),
        @ApiResponse(code = 400, message = "InvalidTransaction", response = InvalidTransaction.class) })
    @PostMapping(
        value = "/transaction",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<SuccessfulTransactionResp> transactionPost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody TransactionReq transactionReq) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
